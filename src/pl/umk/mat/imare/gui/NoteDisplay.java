/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * NoteDisplay.java
 *
 * Created on 2010-02-28, 09:40:18
 */

package pl.umk.mat.imare.gui;

import java.io.File;
import java.io.IOException;
import pl.umk.mat.imare.midi.MidiPlayer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.sound.midi.Instrument;
import javax.sound.midi.InvalidMidiDataException;
import javax.sound.midi.MetaEventListener;
import javax.sound.midi.MetaMessage;
import pl.umk.mat.imare.reco.StaveData;

/**
 * Simple note displaying frame.
 * @author morti
 */
public class NoteDisplay extends javax.swing.JInternalFrame implements MetaEventListener{

    private StavePanel stavePanel = new StavePanel();

    /** Creates new form NoteDisplay */
    private MidiPlayer play=null;

    public NoteDisplay(StaveData staveData){
        initComponents();
        jScrollPane1.setViewportView(stavePanel);
        stavePanel.setStaveData(staveData);

//        try {
//            play = new MidiPlayer();
//            String[] s=play.listAllInstuments();
//            for(int i=0;i<s.length;i++)
//            {
//              jComboBox1.addItem(s[i]);
//            }
//            if(notes.size()>0)
//            {
//                try {
//                    play.createFromNotes(notes, null);
//                } catch (InvalidMidiDataException ex) {
//                    jButton1.setEnabled(false);
//                    jComboBox1.setEnabled(false);
//                    Logger.getLogger(NoteDisplay.class.getName()).log(Level.SEVERE, null, ex);
//                }
//            }
//            if((play.getNumChannels()<=0)||(notes.size()==0))
//            {
//              jButton1.setEnabled(false);
//              jComboBox1.setEnabled(false);
//            }
//            else
//            {
//              play.addListener(this);
//            }
//        } catch (MidiUnavailableException ex) {
//            jButton1.setEnabled(false);
//            jComboBox1.setEnabled(false);
//            Logger.getLogger(NoteDisplay.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jToolBar1 = new javax.swing.JToolBar();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jButton4 = new javax.swing.JButton();

        setClosable(true);
        setMaximizable(true);
        setResizable(true);
        setPreferredSize(new java.awt.Dimension(500, 300));
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                onClose(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.Y_AXIS));
        getContentPane().add(jScrollPane1);

        jToolBar1.setRollover(true);
        jToolBar1.setMaximumSize(new java.awt.Dimension(32918, 25));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pl/umk/mat/imare/gui/gfx/play.png"))); // NOI18N
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton1);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pl/umk/mat/imare/gui/gfx/pause.png"))); // NOI18N
        jButton2.setEnabled(false);
        jButton2.setFocusable(false);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton2);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pl/umk/mat/imare/gui/gfx/stop.png"))); // NOI18N
        jButton3.setEnabled(false);
        jButton3.setFocusable(false);
        jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton3);

        jLabel1.setText("Instrument:");
        jToolBar1.add(jLabel1);

        jToolBar1.add(jComboBox1);

        jButton4.setText("test");
        jButton4.setFocusable(false);
        jButton4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton4);

        getContentPane().add(jToolBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
      Instrument ins=play.findInstrument(jComboBox1.getSelectedItem().toString());
      if(ins!=null)
      {
        try {
          play.pause();
          long pos=play.getPosition();

          play.setSequenceInstrument(0, ins);
          play.setPosition(pos);
          jButton2.setEnabled(true);
          jButton3.setEnabled(true);
          jComboBox1.setEnabled(false);
          jButton1.setEnabled(false);
          play.start();
        } catch (InvalidMidiDataException ex) {
          Logger.getLogger(NoteDisplay.class.getName()).log(Level.SEVERE, null, ex);
        }
      }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
      play.pause();
      jButton1.setEnabled(true);
      jButton2.setEnabled(false);
      jComboBox1.setEnabled(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
      play.stop();
      jButton1.setEnabled(true);
      jButton2.setEnabled(false);
      jButton3.setEnabled(false);
      jComboBox1.setEnabled(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void onClose(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_onClose
      if(play!=null){play.pause();play=null;}
    }//GEN-LAST:event_onClose

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
//        int size=1024;
//        OldFFT fft=null;
//        FFT fft2=null;
//        try {
//            size = 1024;
//            fft = new OldFFT(size);
//            fft2 = new FFT(size);
//        } catch (FFTWrongSizeException ex) {
//            Logger.getLogger(NoteDisplay.class.getName()).log(Level.SEVERE, null, ex);
//        }
//        double[] x=new double[size];
//        Random rand=new Random();
//        for(int i=0;i<size;i++)
//        {
//          x[i]=(rand.nextDouble()-0.5)*1000.0;
//        }
//        long t1=System.currentTimeMillis();
//        int cnt=1;
//        for(int i=0;i<cnt;i++)
//        {
//          fft.process(x);
//        }
//        t1=System.currentTimeMillis()-t1;
//        long t2=System.currentTimeMillis();
//        for(int i=0;i<cnt;i++)
//        {
//          fft2.process(x);
//        }
//        t2=System.currentTimeMillis()-t2;
//        String s1=""+(double)t2/t1;
//        double d=0;
//        for(int i=0;i<fft.getDataCount();i++)
//        {
//          double t=Math.abs(fft.getData(i)-fft2.getData(i))+Math.abs(fft.getPhase(i)-fft2.getPhase(i));
//          if(t>d){d=t;}
//        }
//        jButton4.setText(d+" "+(double)t2/t1);
//
//        t1=System.currentTimeMillis();
//        for(int i=0;i<10000;i++)
//        {
//          fft2.mediana(65536, 1);
//        }
//        t1=System.currentTimeMillis()-t1;
//
//        t2=System.currentTimeMillis();
//        for(int i=0;i<10000;i++)
//        {
//          fft2.mediana(256, 2);
//        }
//        t2=System.currentTimeMillis()-t2;
//
//        long t3;
//        t3=System.currentTimeMillis();
//        for(int i=0;i<10000;i++)
//        {
//          fft2.mediana(16, 4);
//        }
//        t3=System.currentTimeMillis()-t3;
//        jButton4.setText(t1+" "+t2+" "+t3);

      File f=new File("test.mid");
      try {
        play.saveSequence(f);
      } catch (IOException ex) {
        Logger.getLogger(NoteDisplay.class.getName()).log(Level.SEVERE, null, ex);
      }
    }//GEN-LAST:event_jButton4ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void meta(MetaMessage meta) {
      if(meta.getType()==MidiPlayer.END_OF_TRACK_MESSAGE)
      {
        jButton3ActionPerformed(null);
      }
    }

}
